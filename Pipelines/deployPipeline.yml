trigger: none

pool: ubuntu-latest

parameters:
  - name: "imageTag"
    displayName: "Image Tag"
    type: string

variables:
  #GO Variables
  GOBIN:  '$(GOPATH)/bin'
  GOROOT: '/usr/local/go1.22.3'
  GOPATH: '$(system.defaultWorkingDirectory)/gopath'
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)'

  # ACR Pipeline Variables
  acr: <YOUR ACR URI>
  imageRepository: "nginx" #YOUR IMAGE NAME IN ACR REPO
  containerRegistry: "SVC_CONNECTION" #DOCKER SERVICE CONNECTION FOR PUSH

  # Branch Pipeline Variables
  branchToPush: main
  
  # Directorie Pipeline Variables
  k8sFileDir: "$(Build.SourcesDirectory)/k8s"
  k8sFilePath: "$(Build.SourcesDirectory)/k8s/testDeployment.yaml"
  scriptFileDir: "$(Build.SourcesDirectory)/SetK8sImageScriptFiles"
  dockerfilePath: "$(Build.SourcesDirectory)/app/Dockerfile"


stages:
  - stage: TestOpenYaml
    displayName: TestOpenYaml
    jobs:
    - job: Build_and_push
      displayName: Build and push
      steps:
      - task: Docker@2
        displayName: Build and push image
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(containerRegistry)
          tags: |
            ${{ parameters.imageTag }}

      - task: GoTool@0
        displayName: 'Use Go'
        inputs:
          version: '1.22.3'

      - task: Go@0
        displayName: 'go build'
        inputs:
          workingDirectory: '$(scriptFileDir)'
          command: build
          arguments: '-o $(Build.BinariesDirectory)/main'
      
      - task: Bash@3
        name: 'ExecuteGoScript'
        displayName: 'Execute GO Script'
        inputs:
          targetType: 'inline'
          script: |
            $(Build.BinariesDirectory)/main -file $(k8sFilePath) -image "$(acr)/$(imageRepository):${{ parameters.imageTag }}" 

      - task: Bash@3
        name: 'PushYamlToRepo'
        displayName: 'PushYamlToRepo'
        inputs:
          workingDirectory: '$(k8sFileDir)'
          targetType: 'inline'
          script: |
            echo "Configuring Git..."
            git config --global user.email "<YOUR EMAIL>"
            git config --global user.name "YOUR NAME"

            echo "Adding files to Git..."
            git add .

            git commit -m "Automated commit to k8s $(imageRepository) .yaml from Azure DevOps pipeline"

            echo "Pushing changes to repository..."
            git push https://$(pat)$(echo $(Build.Repository.Uri) | sed 's/^https:\/\/ppcsa//') HEAD:$(branchToPush)
        